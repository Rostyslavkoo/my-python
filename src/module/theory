- [x]  типи даних в пандас: dataframe, series, index
- [x]  чому датафрейм це масив і словник одночасно: тому що кожна колонка - сіріес, що схожа на одновимірний масив або словник (індекс-значення)
- [x]  методи series (колонки): head (перші х ел-в), loc (стрічкові назви рядків і колонок) vs iloc (числа)
- [x]  як конкатинувати дві таблиці з однаковими колонками: pd.concat([df1, df2], ignore_index = True) - ігноруються початкові індекси
- [x]  як задати власну ідексацію в дф при зчитуванні з файлу: df.set_index(назва колонки)

**віджети**:

- [x]  типи віджетів: intslider, dropdown, datepicker…

**тестування**:

- [x]  типи тестувань і як вони працюють: модульне (окремі модулі, тестові випадки для кожної функції або методу) та інтегральне (взаємодія між різними модулями)

**щось загальне**:

- [x]  генератор: створює ітерований об’єкт, використовує yield
- [x]  маска - масив значень тру фолс, для індексації
- [x]  як працює і як реалізований ітератор в пайтоні: об’єкт, результат виклику методу iter, відстежує наступний елемент в послідовності
- [x]  ліст компрехеншн? як заповнити: списковий вираз, визначає список через вже існуючий; squares = [x ** 2 for i in range(10)]
- [x]  перевизначення оператора *: написати ф-ю __mul__ в класі
- [x]  універсальні функції: + -, можна використовувати для ел-в різних контейнерів
- [x]  слайсинг в матриці: [i, :] - всі елементи з і-го рядка
- [x]  агрегація: sum min max
- [x]  метод pd max(): значення найбільшого ел-та для кожного рядка
- [x]  метод idxmax(): індекс найбільшого значення для кожного рядка
- [x]  метод apply(): застосовує функцію до кожного рядка або колонки